{
  "openapi": "3.0.1",
  "info": {
    "title": "Interceptor Manager REST API",
    "version": "v1"
  },
  "paths": {
    "/api/context": {
      "get": {
        "operationId": "getContext",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Context"
                }
              }
            },
            "description": "Context information"
          }
        },
        "summary": "Returns basic context information of Polarion's extension",
        "tags": [
          "Extension Information"
        ]
      }
    },
    "/api/hook-settings/{hook}/content": {
      "get": {
        "operationId": "readSetting",
        "parameters": [
          {
            "in": "path",
            "name": "hook",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "revision",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsModel"
                }
              }
            },
            "description": "Successfully retrieved hook content"
          }
        },
        "summary": "Returns values (content) of specified hook setting",
        "tags": [
          "Hooks settings"
        ]
      },
      "put": {
        "operationId": "saveSetting",
        "parameters": [
          {
            "in": "path",
            "name": "hook",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created or updated hook setting"
          }
        },
        "summary": "Creates or updates hook setting. Creation scenario will use default setting value if no body specified in the request.",
        "tags": [
          "Hooks settings"
        ]
      }
    },
    "/api/hook-settings/{hook}/default-content": {
      "get": {
        "operationId": "getDefaultValues",
        "parameters": [
          {
            "in": "path",
            "name": "hook",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsModel"
                }
              }
            },
            "description": "Successfully retrieved default hook setting values"
          }
        },
        "summary": "Returns default values of specified hook setting",
        "tags": [
          "Hooks settings"
        ]
      }
    },
    "/api/hook-settings/{hook}/revisions": {
      "get": {
        "operationId": "readRevisionsList",
        "parameters": [
          {
            "in": "path",
            "name": "hook",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Revision"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successfully retrieved revisions"
          }
        },
        "summary": "Returns revisions history of specified hook setting",
        "tags": [
          "Hooks settings"
        ]
      }
    },
    "/api/hooks": {
      "get": {
        "operationId": "getHooksList",
        "parameters": [
          {
            "in": "query",
            "name": "reload",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/IActionHook"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successfully retrieved hooks list"
          }
        },
        "summary": "Returns existing hooks list. By using 'reload' param hooks list will be also refreshed/reloaded from hooks folder.",
        "tags": [
          "Hooks"
        ]
      }
    },
    "/api/version": {
      "get": {
        "operationId": "getVersion",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            },
            "description": "Version information"
          }
        },
        "summary": "Returns version of Polarion's extension",
        "tags": [
          "Extension Information"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Context": {
        "description": "Represents the context for building URLs related to Polarion services",
        "properties": {
          "baseUrl": {
            "description": "Returns the base URL constructed with the extension context",
            "type": "string"
          },
          "extensionContext": {
            "description": "The extension context used as a base for URL construction",
            "type": "string"
          },
          "restUrl": {
            "description": "Returns the REST API URL constructed with the extension context",
            "type": "string"
          },
          "swaggerUiUrl": {
            "description": "Returns the Swagger UI URL for the REST API",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HookExecutor": {
        "type": "object"
      },
      "IActionHook": {
        "properties": {
          "actionType": {
            "description": "Represents the type of actions that can be intercepted",
            "enum": [
              "SAVE",
              "DELETE"
            ],
            "type": "string"
          },
          "defaultSettings": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "executor": {
            "$ref": "#/components/schemas/HookExecutor"
          },
          "itemTypes": {
            "items": {
              "description": "Represents the type of items that can be intercepted",
              "enum": [
                "WORKITEM",
                "TESTRUN",
                "PLAN",
                "MODULE",
                "MODULE_COMMENT",
                "WORK_RECORD"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Revision": {
        "description": "Revision details",
        "properties": {
          "author": {
            "description": "The author of the revision",
            "type": "string"
          },
          "baseline": {
            "description": "The baseline of the revision",
            "type": "string"
          },
          "date": {
            "description": "The date of the revision",
            "type": "string"
          },
          "description": {
            "description": "The description of the revision",
            "type": "string"
          },
          "name": {
            "description": "The name of the revision",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SettingsModel": {
        "description": "Settings model",
        "properties": {
          "bundleTimestamp": {
            "description": "The bundle timestamp of the setting",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Version": {
        "description": "Details about the software version",
        "properties": {
          "automaticModuleName": {
            "description": "The automatic module name",
            "type": "string"
          },
          "bundleBuildTimestamp": {
            "description": "The build timestamp of the bundle",
            "type": "string"
          },
          "bundleName": {
            "description": "The name of the bundle",
            "type": "string"
          },
          "bundleVendor": {
            "description": "The vendor of the bundle",
            "type": "string"
          },
          "bundleVersion": {
            "description": "The version of the bundle",
            "type": "string"
          },
          "projectURL": {
            "description": "The project URL",
            "type": "string"
          },
          "supportEmail": {
            "description": "Support email for the bundle",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  }
}
